# ServerProperties
server.port=8080
server.servlet.context-path=/community

# ThymeleafProperties
spring.thymeleaf.cache=false

# DataSourceProperties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
spring.datasource.username=root
spring.datasource.password=root
#用的内置连接池
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15 
#最小空闲连接
spring.datasource.hikari.minimum-idle=5
#连接空闲多久会被断开收回
spring.datasource.hikari.idle-timeout=30000

# MybatisProperties
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.nowcoder.community.entity
#主键自增
mybatis.configuration.useGeneratedKeys=true
#数据库字段与pojo属性名，开启驼峰对应
mybatis.configuration.mapUnderscoreToCamelCase=true

# logger
#logging.level.com.nowcoder.community=debug
#日志以文件形式输出到指定位置
#logging.file=d:/work/data/nowcoder/community.log
#日志存到同一文件显然过大，实际开发往往按日志级别分类，比如error放一个日志文件，warn放一个
#且当一个日志文件大于比如5兆时，则再分出产生一个新的文件。那么在application中配就很复杂
#我们用xml文件来配置，其实也即是原来的log4j配置的东西